<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.BoardMapper">
    <resultMap id="Board" type="domain.dto.BoardDto">
        <result property="id" column="id"/>
        <result property="member_id" column="member_id"/>
        <result property="title" column="title"/>
        <result property="contents"  column="contents"/>
        <result property="updated_at" column="updated_at"/>
        <result property="created_at" column="created_at"/>
        <collection property="comments" column="{board_id=id}" javaType="java.util.ArrayList"
                    ofType="domain.dto.BoardCommentDTO" select="getComments"/>
    </resultMap>

    <resultMap id="BoardComments" type="domain.dto.BoardCommentDto">
        <result property="id" column="id"/>
        <result property="boardId" column="board_id"/>
        <result property="memberId" column="member_id"/>
        <result property="contents" column="contents"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <resultMap id="BoardList" type="domain.dto.BoardPaginationDto">
        <collection property="boardList" column="" javaType="java.util.ArrayList"  ofType="domain.dto.BoardDto" select="getBoardList"/>
        <collection property="boardList" column="" javaType="java.util.ArrayList"  ofType="domain.dto.BoardDto" select="searchToTitle"/>
        <collection property="boardList" column="" javaType="java.util.ArrayList"  ofType="domain.dto.BoardDto" select="searchToContents"/>
    </resultMap>


    <insert id="createBoard">
        INSERT INTO `boards`(`member_id`, `title`, `contents`)
        VALUES (#{member_id}, #{boardDto.title}, #{boardDto.contents})
    </insert>

    <select id="getBoardToId" resultMap="Board">
        SELECT *
        FROM `boards`
        WHERE `id` = #{id};
    </select>
    
    <update id="updateBoard">
        UPDATE `boards`
        SET `title` = #{title},
            `contents` = #{contents}
        WHERE `id` = #{id};
    </update>

    <delete id="deleteBoard">
        DELETE
        FROM `boards`
        WHERE `id` = #{id};
    </delete>

    <select id="getComments" resultMap="BoardComments">
        SELECT *
        FROM `comments`
        WHERE `board_id` = #{board_id};
    </select>
    
    <sql id="count">
        SELECT count(*) FROM `boards`
    </sql>
    
    <select id="getBoardCnt" resultType="int">
        <include refid="count"/>;
    </select>
    
    <sql id="limit">
        LIMIT #{start}, #{range}
    </sql>
    <select id="getBoardList" resultMap="Board">
        SELECT *
        FROM `boards`
            ORDER BY `created_at` DESC
        <include refid="limit"/>;
    </select>

    <!--  페이징을 위한 검색 시 게시글 개수얻기  -->
    <select id="countBoardToTitle" resultType="int">
        <include refid="count"/>
        WHERE title REGEXP #{title};
    </select>

    <select id="countBoardToContents" resultType="int">
        <include refid="count"/>
        WHERE contents REGEXP #{contents};
    </select>

    <sql id="select">
        SELECT * FROM `boards`
    </sql>
    <!--  게시글 얻기 -->
    <select id="searchToTitle" resultMap="Board">
        <include refid="select"/>
        WHERE title REGEXP #{title}
        <include refid="limit"/>;
    </select>
    <select id="searchToContents" resultMap="Board">
        <include refid="select"/>
        WHERE contents REGEXP #{contents}
        <include refid="limit"/>;
    </select>

</mapper>