<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.MemberMapper">
    <resultMap id="Member" type="domain.dto.MemberDto">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="nickName" column="nick_name"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <insert id = "join">
        INSERT INTO `members`(`name`, `password`, `email`, `nick_name`, `phone_number`, age, sex)
        VALUES (#{memberDto.name}, #{memberDto.password}, #{memberDto.email}, #{memberDto.nickName},
                #{memberDto.phoneNumber}, #{memberDto.age}, #{memberDto.sex})
    </insert>
    <select id="checkExistEmail" resultType="Boolean">
        SELECT EXISTS(
                        SELECT `id`
                        FROM `members`
                        WHERE `email` = #{email});
    </select>
    <select id="checkExistNickName" resultType="Boolean">
        SELECT EXISTS(
                       SELECT `id`
                       FROM `members`
                       WHERE `nick_name` = #{nickName});
    </select>

    <select id="getUserInfoToEmail" resultMap="Member">
        SELECT *
        FROM `members`
        WHERE `email` = #{email};
    </select>

    <update id="updateMember">
        UPDATE `members`
        SET `name` = #{memberDto.name},
            `email` = #{memberDto.email},
            `nick_name` = #{memberDto.nickName},
            `phone_number` = #{memberDto.phoneNumber},
            `age` = #{memberDto.age},
            `sex` = #{memberDto.sex}
        WHERE `id` = #{memberDto.id};
    </update>
    <delete id="deleteMember">
        DELETE
        FROM `members`
        WHERE `id` = #{id};
    </delete>

</mapper>

